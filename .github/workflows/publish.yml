name: Publish to PyPI and GitHub Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Release Tag (e.g., v1.0.0). Defaults to version from changelog.md if not provided."
        required: false

permissions:
  contents: write

jobs:
  build:
    name: Build distributions
    runs-on: ubuntu-latest
    outputs:
      hashes: ${{ steps.hash.outputs.hashes }}
      version: ${{ steps.get-changelog-info.outputs.version }}
      changelog: ${{ steps.get-changelog-info.outputs.changelog }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Fetch changelog and version
        id: get-changelog-info
        run: |
          PACKAGE_VERSION=$(head -n 1 changelog.md | awk '{print $NF}' | sed 's/://')
          CHANGELOG_ENTRY=$(awk '/^# nyaaup / { if (found) exit; else if (NR==1) found=1 } found' changelog.md | sed '/^# nyaaup /d')

          echo "version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG_ENTRY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Install build tool
        run: python -m pip install --upgrade build

      - name: Build dists
        run: |
          SOURCE_DATE_EPOCH=$(git log -1 --pretty=%ct)
          python -m build

      - name: Generate hashes
        id: hash
        run: |
          cd dist
          echo "hashes=$(sha256sum * | base64 -w0)" >> $GITHUB_OUTPUT

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          if-no-files-found: error
          retention-days: 5

  provenance:
    needs: build
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.1.0
    permissions:
      contents: write
      id-token: write
      actions: read
    with:
      base64-subjects: ${{ needs.build.outputs.hashes }}
      upload-assets: true
      compile-generator: true

  publish:
    name: Publish to PyPI and GitHub
    needs: [build, provenance]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/project/nyaaup/

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Create or Update GitHub Release and Upload Assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          RELEASE_TAG="${{ github.event.inputs.tag || needs.build.outputs.version }}"
          RELEASE_CHANGELOG="${{ needs.build.outputs.changelog }}"

          if [ -z "$RELEASE_TAG" ]; then
            echo "Error: Could not determine release tag. Please provide an input tag or ensure version is in changelog.md."
            exit 1
          fi

          RELEASE_NAME="Release $RELEASE_TAG"

          echo "$RELEASE_CHANGELOG" > release_notes.txt

          if gh release view "$RELEASE_TAG" --repo ${{ github.repository }}; then
            gh release upload "$RELEASE_TAG" dist/* --repo ${{ github.repository }} --clobber
          else
            gh release create "$RELEASE_TAG" \
              --repo ${{ github.repository }} \
              --title "$RELEASE_NAME" \
              --notes-file release_notes.txt \
              --target ${{ github.sha }} \
              dist/*
          fi

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.12.3
        with:
          password: ${{ secrets.PYPI_TOKEN }}
